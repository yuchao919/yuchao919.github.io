" 取消备份
set nobackup
set noswapfile

" 文件编码
set encoding=utf-8

" 显示行号
set number

" 取消换行
set nowrap

" 显示光标当前位置
set ruler

" 设置缩进
set cindent
set tabstop=2
set shiftwidth=2

" 突出显示当前行
set cursorline

" 查找
set ic
set hls
set is

" 左下角显示当前 vim 模式
set showmode

" 启动 vim 时关闭折叠代码
set nofoldenable

" 安装并配置插件
call plug#begin('~/.vim/plugged')

" 主题
" Plug 'altercation/vim-colors-solarized'
" Plug 'Anthony25/gnome-terminal-colors-solarized'
Plug 'flazz/vim-colorschemes'

syntax enable
"syntax on
set t_Co=256
"set background=dark
set background=light
let g:solarized_termcolors=256
colorscheme solarized

" 树形目录
Plug 'scrooloose/nerdtree'
Plug 'jistr/vim-nerdtree-tabs'
Plug 'Xuyuanp/nerdtree-git-plugin'
 
autocmd vimenter * NERDTree
map <C-n> :NERDTreeToggle <CR>
let NERDTreeShowHidden=1
let g:NERDTreeShowIgnoredStatus=1
let g:nerdtree_tabs_open_on_console_startup=1
let g:NERDTreeIndicatorMapCustom={
    \ "Modified"  : "✹",
    \ "Staged"    : "✚",
    \ "Untracked" : "✭",
    \ "Renamed"   : "➜",
    \ "Unmerged"  : "═",
    \ "Deleted"   : "✖",
    \ "Dirty"     : "✗",
    \ "Clean"     : "✔︎",
    \ 'Ignored'   : '☒',
    \ "Unknown"   : "?"
    \ }
"  
" # o 打开关闭文件或目录
" # e 以文件管理的方式打开选中的目录
" # t 在标签页中打开
" # T 在标签页中打开，但光标仍然留在 NERDTree
" # r 刷新光标所在的目录
" # R 刷新当前根路径
" # X 收起所有目录
" # p 小写，跳转到光标所在的上一级路径
" # P 大写，跳转到当前根路径
" # J 到第一个节点
" # K 到最后一个节点
" # I 显示隐藏文件
" # m 显示文件操作菜单
" # C 将根路径设置为光标所在的目录
" # u 设置上级目录为根路径
" # ctrl + w + w 光标自动在左右侧窗口切换
" # ctrl + w + r 移动当前窗口的布局位置
" # :tabc 关闭当前的 tab
" # :tabo   关闭所有其他的 tab
" # :tabp   前一个 tab
" # :tabn   后一个 tab
" # gT      前一个 tab
" # gt      后一个 tab”

" 代码，引号，路径补全
Plug 'Valloric/YouCompleteMe'
Plug 'Raimondi/delimitMate'
Plug 'Shougo/deoplete.nvim', { 'do': ':UpdateRemotePlugins' }

" 语法高亮，检查
Plug 'sheerun/vim-polyglot'
Plug 'w0rp/ale'

let g:ale_linters={
\    'javascript': ['eslint'],
\    'css': ['stylelint'],
\}
let g:ale_fixers={
\    'javascript': ['eslint'],
\    'css': ['stylelint'],
\}
let g:ale_fix_on_save=1

let g:ale_sign_column_always=1
let g:ale_sign_error='●'
let g:ale_sign_warning='▶'

nmap <silent> <C-k> <Plug>(ale_previous_wrap)
nmap <silent> <C-j> <Plug>(ale_next_wrap)

" 文件，代码搜索
Plug 'rking/ag.vim'
Plug 'kien/ctrlp.vim'

" 加强版状态栏
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'

"set laststatus=2
let g:airline_powerline_fonts=1
let g:airline#extensions#tabline#enabled=1
let g:airline#extensions#tabline#buffer_nr_show=1
if !exists('g:airline_symbols')
  let g:airline_symbols={}
endif

" unicode symbols
let g:airline_left_sep='»'
let g:airline_left_sep='▶'
let g:airline_right_sep='«'
let g:airline_right_sep='◀'
let g:airline_symbols.crypt='🔒'
let g:airline_symbols.linenr='☰'
let g:airline_symbols.linenr='␊'
let g:airline_symbols.linenr='␤'
let g:airline_symbols.linenr='¶'
let g:airline_symbols.maxlinenr=''
let g:airline_symbols.maxlinenr='㏑'
let g:airline_symbols.branch='⎇'
let g:airline_symbols.paste='ρ'
let g:airline_symbols.paste='Þ'
let g:airline_symbols.paste='∥'
let g:airline_symbols.spell='Ꞩ'
let g:airline_symbols.notexists='∄'
let g:airline_symbols.whitespace='Ξ'

let g:airline_theme='solarized'

" 代码注释
Plug 'scrooloose/nerdcommenter'

" # <leader>cc // 注释
" # <leader>cm 只用一组符号注释
" # <leader>cA 在行尾添加注释
" # <leader>c$ /* 注释 */
" # <leader>cs /* 块注释 */
" # <leader>cy 注释并复制
" # <leader>c<space> 注释/取消注释
" # <leader>ca 切换　// 和 /* */
" # <leader>cu 取消注释

let g:NERDSpaceDelims=1
let g:NERDDefaultAlign='left'
let g:NERDCustomDelimiters={
            \ 'javascript': { 'left': '//', 'leftAlt': '/**', 'rightAlt': '*/' },
            \ 'less': { 'left': '/**', 'right': '*/' }
        \ }

" git
Plug 'airblade/vim-gitgutter'
Plug 'tpope/vim-fugitive'

" Markdown
Plug 'suan/vim-instant-markdown'

let g:instant_markdown_slow=1
let g:instant_markdown_autostart=0
" # :InstantMarkdownPreview

" Emmet
Plug 'mattn/emmet-vim'

let g:user_emmet_leader_key='<Tab>'
let g:user_emmet_settings={
         \ 'javascript.jsx' : {
            \ 'extends' : 'jsx',
        \ },
         \ }

" html 5
Plug 'othree/html5.vim'

" css 3
Plug 'hail2u/vim-css3-syntax'
Plug 'ap/vim-css-color'

augroup VimCSS3Syntax
  autocmd!

  autocmd FileType css setlocal iskeyword+=-
augroup END

" JavaScipt
Plug 'pangloss/vim-javascript'

let g:javascript_plugin_jsdoc=1
let g:javascript_plugin_ngdoc=1
let g:javascript_plugin_flow=1
set foldmethod=syntax
let g:javascript_conceal_function            ="ƒ"
let g:javascript_conceal_null                ="ø"
let g:javascript_conceal_this                ="@"
let g:javascript_conceal_return              ="⇚"
let g:javascript_conceal_undefined           ="¿"
let g:javascript_conceal_NaN                 ="ℕ"
let g:javascript_conceal_prototype           ="¶"
let g:javascript_conceal_static              ="•"
let g:javascript_conceal_super               ="Ω"
let g:javascript_conceal_arrow_function      ="⇒"
let g:javascript_conceal_noarg_arrow_function=""
let g:javascript_conceal_underscore_arrow_function=""
set conceallevel=1

" React
Plug 'mxw/vim-jsx'

let g:jsx_ext_required=0

" Prettier
Plug 'prettier/vim-prettier', {
  \ 'do': 'yarn install',
  \ 'for': ['javascript', 'typescript', 'css', 'less', 'scss', 'json', 'graphql'] }

let g:prettier#config#bracket_spacing='true'
let g:prettier#autoformat=0
autocmd BufWritePre *.js,*.jsx,*.mjs,*.ts,*.tsx,*.css,*.less,*.scss,*.json,*.graphql PrettierAsync

" # :Prettier
call plug#end()

